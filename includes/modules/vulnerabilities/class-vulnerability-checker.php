<?php
/**
 * Vulnerability Checker - CORREGIDO
 * ✅ SIN llamadas a API inexistentes
 */

if (!defined('ABSPATH')) {
    exit;
}

class SpamGuard_Vulnerability_Checker {
    
    private static $instance = null;
    
    public static function get_instance() {
        if (null === self::$instance) {
            self::$instance = new self();
        }
        return self::$instance;
    }
    
    private function __construct() {
        // ✅ NO programar scan automático por ahora
        // Causaría errores 502 hasta que implementemos la API
    }
    
    /**
     * ✅ DUMMY: Escanear vulnerabilidades
     * Por ahora retorna array vacío
     */
    public function scan_all() {
        // ✅ TODO: Implementar cuando tengamos la API de vulnerabilidades
        
        return array(
            'success' => true,
            'total_checked' => 0,
            'vulnerable_count' => 0,
            'vulnerable_components' => array(),
            'message' => __('Vulnerability scanning coming soon', 'spamguard')
        );
    }
    
    /**
     * Obtener vulnerabilidades guardadas
     */
    public function get_vulnerabilities($filters = array()) {
        global $wpdb;
        $table = $wpdb->prefix . 'spamguard_vulnerabilities';
        
        // Verificar si la tabla existe
        $table_exists = $wpdb->get_var("SHOW TABLES LIKE '$table'") === $table;
        
        if (!$table_exists) {
            return array();
        }
        
        return $wpdb->get_results(
            "SELECT * FROM $table ORDER BY detected_at DESC LIMIT 50"
        );
    }
    
    /**
     * Obtener estadísticas
     */
    public function get_stats() {
        global $wpdb;
        $table = $wpdb->prefix . 'spamguard_vulnerabilities';
        
        // Verificar si la tabla existe
        $table_exists = $wpdb->get_var("SHOW TABLES LIKE '$table'") === $table;
        
        if (!$table_exists) {
            return array(
                'total' => 0,
                'by_severity' => array(
                    'critical' => 0,
                    'high' => 0,
                    'medium' => 0,
                    'low' => 0
                ),
                'last_scan' => null
            );
        }
        
        $total = $wpdb->get_var("SELECT COUNT(*) FROM $table");
        
        $by_severity = array(
            'critical' => $wpdb->get_var("SELECT COUNT(*) FROM $table WHERE severity = 'critical'"),
            'high' => $wpdb->get_var("SELECT COUNT(*) FROM $table WHERE severity = 'high'"),
            'medium' => $wpdb->get_var("SELECT COUNT(*) FROM $table WHERE severity = 'medium'"),
            'low' => $wpdb->get_var("SELECT COUNT(*) FROM $table WHERE severity = 'low'")
        );
        
        return array(
            'total' => intval($total),
            'by_severity' => $by_severity,
            'last_scan' => get_option('spamguard_last_vulnerability_scan')
        );
    }
}
